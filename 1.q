/ q的作者是Arthur Whitney，2003首版本发布，表达力强，速度，效率
/ q进化与APL，作者Kenneth Iverson
/ 能够对向量快速进行复杂的计算，适合处理时间序列，很有效率
/ 有lisp的基因，q中的基本的数据是list，
/ q不是纯粹的函数式
/ 传统数据库编程有关于数据的问题
/ 在内存中的表现形式，例如对象的集合，必须要映射成表，维护关系正确很费力
/ 对象必须转成其他形式传递，通常是二进制，xml格式
/ 数据操作，选择，分组，聚合
/ 数据展示需要分层结构
/ q是解释型的，不是编译型，在运行期，数据和函数在内存中
/ q是动态类型的语言
/ q的运算顺序是从右到左，函数的调用可以省略方括号，标点符号的影响直接减少？？？
/ q中的null值和最大最小值，占用同样的存储空间，同样参与算数运算
/ q的IO使用handle
/ q面向表，放弃了对象，没有类，对象，继承和虚函数，表就是一级公民
/ q中的有序列表，传统sql是无顺set，传统处理时间序列很慢，simple list存储在连续的空间内，处理大数据很快
/ q面向列操作，传统sql是行为一条数据
/ 开始可以把kdb+当做内存数据库